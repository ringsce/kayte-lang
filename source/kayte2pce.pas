unit Kayte2PCE;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils;

type
  { TKayte2PCE }
  TKayte2PCE = class
  private
    FSourceFile: string;
    FOutputFile: string;
    FAssemblerPath: string;
    procedure CompileToAssembly(const Source, Target: string);
    procedure AssembleToROM(const AssemblyFile, ROMFile: string);
  public
    constructor Create(const AssemblerPath: string);
    procedure ConvertKayteToROM(const SourceFile, OutputFile: string);
  end;

implementation

{ TKayte2PCE }

constructor TKayte2PCE.Create(const AssemblerPath: string);
begin
  inherited Create;
  FAssemblerPath := AssemblerPath;
  if not FileExists(FAssemblerPath) then
    raise Exception.Create('Assembler not found at: ' + FAssemblerPath);
end;

procedure TKayte2PCE.CompileToAssembly(const Source, Target: string);
var
  AssemblyCode: TStringList;
begin
  AssemblyCode := TStringList.Create;
  try
    // TODO: Implement Kayte Lang to PCE Assembly translation logic
    AssemblyCode.Add('; PCE Assembly generated by Kayte2PCE');
    AssemblyCode.Add('; Source: ' + Source);
    AssemblyCode.Add('  ORG $E000'); // Example starting address
    AssemblyCode.Add('  JMP START');
    AssemblyCode.Add('START:');
    AssemblyCode.Add('  NOP');
    AssemblyCode.Add('  BRK'); // End program with a break
    AssemblyCode.SaveToFile(Target);
    Writeln('Assembly generated: ', Target);
  finally
    AssemblyCode.Free;
  end;
end;

procedure TKayte2PCE.AssembleToROM(const AssemblyFile, ROMFile: string);
var
  Command: string;
begin
  Command := Format('"%s" -o "%s" "%s"', [FAssemblerPath, ROMFile, AssemblyFile]);
  if SysUtils.ExecuteProcess('/bin/sh', ['-c', Command]) <> 0 then
    raise Exception.Create('Error assembling ROM from ' + AssemblyFile);
  Writeln('ROM generated: ', ROMFile);
end;

procedure TKayte2PCE.ConvertKayteToROM(const SourceFile, OutputFile: string);
var
  TempAssemblyFile: string;
begin
  if not FileExists(SourceFile) then
    raise Exception.Create('Source file not found: ' + SourceFile);

  TempAssemblyFile := ChangeFileExt(SourceFile, '.asm');

  try
    // Step 1: Compile Kayte Lang source to PCE assembly
    CompileToAssembly(SourceFile, TempAssemblyFile);

    // Step 2: Assemble PCE assembly into a ROM
    AssembleToROM(TempAssemblyFile, OutputFile);
  finally
    if FileExists(TempAssemblyFile) then
      DeleteFile(TempAssemblyFile);
  end;
end;

end.

