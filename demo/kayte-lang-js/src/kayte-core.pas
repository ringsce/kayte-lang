// kayte-core.pas
program KayteCore;

{$mode objfpc}{$H+}

uses
  SysUtils;

type
  KayteInterpreter = class
  private
    procedure ExecutePrint(const S: string);
  public
    procedure RunCode(const Code: string);
    function CompileCode(const Code: string): string;
  end;

procedure KayteInterpreter.ExecutePrint(const S: string);
begin
  WriteLn(S);
end;

procedure KayteInterpreter.RunCode(const Code: string);
var
  Line: string;
begin
  Line := Trim(Code);
  if Pos('print ', Line) = 1 then
    ExecutePrint(Copy(Line, 7, Length(Line) - 6))
  else
    WriteLn('Unknown command: ', Line);
end;

function KayteInterpreter.CompileCode(const Code: string): string;
begin
  Result := 'Bytecode for "' + Code + '"';
end;

var
  Interpreter: KayteInterpreter;

{$IFDEF NODEJS}
exports.runKayteCode := @Interpreter.RunCode;
exports.compileKayteCode := @Interpreter.CompileCode;
{$ELSE}

// Main program entry point for testing standalone execution
var
  SampleCode: string;
begin
  Interpreter := KayteInterpreter.Create;
  try
    SampleCode := 'print "Hello from Kayte Lang!"';
    WriteLn('Running Kayte Lang code...');
    Interpreter.RunCode(SampleCode);

    WriteLn('Compiling Kayte Lang code...');
    WriteLn('Generated Bytecode: ', Interpreter.CompileCode(SampleCode));
  finally
    Interpreter.Free;
  end;
end;
{$ENDIF}

